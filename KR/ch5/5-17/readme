Exercise 5-17
Add a field-handling capability, so sorting may be done on fields within lines, each field sorted according to an independent set of options
(The index for this book was sorted with -df for the index category and -n for the page numbers.)

Brief explanation:
--
For a generic explanation of the approach taken, please refer to the readme file of exercise 5-14.
Assuming you've read it, we need to make a few assumptions. First of all, let's assume that fields are splitted with a |. For example, in this line:
214|Linux for you|22
We have 3 fields: the 1st field is "214", the 2nd is "Linux for you" and the 3rd is "22".
Counting starts on 1. We will provide a new option, "-x", which should be followed by the number of the field that is relevant for ordering.
For example, "-x 3" indicates that the output shall be ordered considering field number 3 (and, of course, this can be combined with -r, -f, etc).
If the line has less fields than the number indicated, the last field will be considered. Field numbers must always be positive integers (> 0).
There will be a function, delim_pos, that returns a pointer to the beginning of the p-th field of string s, and also gives the caller function a pointer to
the end of the current field. The caller function, which will be fieldcomp, holds an internal state consisting of a pointer to the comparison function
(might be strcmp, numcmp, etc...) and the field number, and its job is to:
	1. For each of the pair of strings to be compared, call delim_pos to get the pointer to the beginning of the field and the pointer to the end of the field
	2. Replace the end of the field (typically '|', but can also be '\0') with '\0' in each string
	3. Call the original comparison function
	4. Replace the recently written '\0' with whatever was there.


GCC command:
gcc -o solution solution.c -Wall
